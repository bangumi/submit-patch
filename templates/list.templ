package templates

import (
	"app/view"
	"fmt"
	"net/url"
)

templ listFilter(u *url.URL, currentTypeFilter string, currentStateFilter string, pendingCount view.PendingPatchCount) {
	<div class="row pt-2 pb-2 d-flex justify-content-between">
		<div class="col">
			<div class="btn-group" role="group">
				<a
					type="button"
					if currentTypeFilter == "subject" {
						class="btn btn-primary"
					} else {
						class="btn btn-outline-primary"
					}
					href={ setQuery(u, "type", "subject") }
				>
					条目
					if pendingCount.Subject > 0 {
						<span class="badge rounded-pill bg-danger">{ fmt.Sprint(pendingCount.Subject) }</span>
					}
				</a>
				<a
					type="button"
					if currentTypeFilter == "episode" {
						class="btn btn-primary"
					} else {
						class="btn btn-outline-primary"
					}
					href={ setQuery(u, "type", "episode") }
				>
					章节
					if pendingCount.Episode > 0 {
						<span class="badge rounded-pill bg-danger">{ fmt.Sprint(pendingCount.Episode) }</span>
					}
				</a>
			</div>
		</div>
		<div class="col d-flex flex-row-reverse">
			<div class="btn-group" role="group">
				for _, filter := range allReadableStateFilter {
					if currentStateFilter  == filter.Enum {
						<a
							type="button"
							href={ setQuery(u, "state", filter.Enum) }
							class="btn btn-primary"
						>
							{ filter.Readable }
						</a>
					} else {
						<a
							type="button"
							href={ setQuery(u, "state", filter.Enum) }
							class="btn btn-outline-primary"
						>
							{ filter.Readable }
						</a>
					}
				}
			</div>
		</div>
	</div>
}
