{
  "version": 3,
  "sources": ["../src/error.ts", "../src/shared.ts", "../src/types.ts", "../src/stringify.ts", "../src/index.ts"],
  "sourcesContent": ["export const GlobalPrefixError = \"missing prefix '{{Infobox' at the start\";\nexport const GlobalSuffixError = \"missing suffix '}}' at the end\";\nexport const ArrayNoCloseError = \"array should be closed by '}'\";\nexport const ArrayItemWrappedError = \"array item should be wrapped by '[]'\";\nexport const ExpectingNewFieldError = \"missing '|' to start a new field\";\nexport const ExpectingSignEqualError = \"missing '=' to separate field name and value\";\n\nexport class WikiSyntaxError extends Error {\n  lino: number;\n  line: string | null;\n\n  constructor(lino: number, line: string | null, message: string) {\n    super(toErrorString(lino, line, message));\n    this.line = line;\n    this.lino = lino;\n  }\n}\n\nfunction toErrorString(lino: number, line: string | null, msg: string): string {\n  if (line === null) {\n    return `WikiSyntaxError: ${msg}, line ${lino}`;\n  }\n\n  return `WikiSyntaxError: ${msg}, line ${lino}: ${JSON.stringify(line)}`;\n}\n", "/* should start with `{{Infobox` and end with `}}` */\nexport const prefix = '{{Infobox';\nexport const suffix = '}}';\n", "export interface Wiki {\n  type: string;\n  data: WikiItem[];\n}\n\n/** JS \u7684 map \u4F1A\u6309\u7167\u63D2\u5165\u987A\u5E8F\u6392\u5E8F */\nexport interface WikiMap {\n  type: string;\n  data: Map<string, WikiItem>;\n}\n\nexport type WikiItemType = 'array' | 'object';\n\nexport class WikiArrayItem {\n  k?: string;\n  v?: string;\n\n  constructor(k?: string, v?: string) {\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    this.k = k || undefined;\n    this.v = v;\n  }\n}\n\nexport class WikiItem {\n  key: string;\n  value?: string;\n  array?: boolean;\n  values?: WikiArrayItem[];\n\n  constructor(key: string, value: string, type: WikiItemType) {\n    this.key = key;\n    switch (type) {\n      case 'array': {\n        this.array = true;\n        this.values = [];\n        break;\n      }\n      case 'object': {\n        this.value = value;\n        break;\n      }\n    }\n  }\n\n  private convertToArray() {\n    if (this.array) {\n      return;\n    }\n\n    this.array = true;\n    this.values ??= [];\n\n    this.values.push(new WikiArrayItem(undefined, this.value));\n    this.value = undefined;\n  }\n\n  push(item: WikiItem) {\n    this.convertToArray();\n\n    if (item.array) {\n      this.values?.push(...(item.values ?? []));\n    } else {\n      this.values?.push(new WikiArrayItem(undefined, item.value));\n    }\n  }\n}\n", "/* eslint-disable unicorn/no-array-reduce */\nimport { prefix, suffix } from './shared.js';\nimport type { Wiki, WikiArrayItem, WikiMap } from './types.js';\n\nconst stringifyArray = (arr: WikiArrayItem[] | undefined) => {\n  if (!arr) {\n    return '';\n  }\n  return arr.reduce((pre, item) => `${pre}\\n[${item.k ? `${item.k}|` : ''}${item.v ?? ''}]`, '');\n};\n\nexport function stringify(wiki: Wiki): string {\n  const body = wiki.data.reduce((pre, item) => {\n    if (item.array) {\n      return `${pre}\\n|${item.key} = {${stringifyArray(item.values)}\\n}`;\n    }\n    return `${pre}\\n|${item.key} = ${item.value ?? ''}`;\n  }, '');\n\n  const type = wiki.type ? ' ' + wiki.type : '';\n\n  return `${prefix}${type}${body}\\n${suffix}`;\n}\n\nexport function stringifyMap(wiki: WikiMap): string {\n  const body = [...wiki.data]\n    .map(([_key, item]) => {\n      if (item.array) {\n        return `|${item.key} = {${stringifyArray(item.values)}\\n}`;\n      }\n\n      return `|${item.key} = ${item.value ?? ''}`;\n    })\n    .join('\\n');\n\n  const type = wiki.type ? ' ' + wiki.type : '';\n\n  return `${prefix}${type}\\n${body}\\n${suffix}`;\n}\n", "import {\n  ArrayItemWrappedError,\n  ArrayNoCloseError,\n  ExpectingNewFieldError,\n  ExpectingSignEqualError,\n  GlobalPrefixError,\n  GlobalSuffixError,\n  WikiSyntaxError,\n} from './error.js';\nimport { prefix, suffix } from './shared.js';\nimport type { Wiki, WikiItemType, WikiMap } from './types.js';\nimport { WikiArrayItem, WikiItem } from './types.js';\n\nexport * from './types.js';\nexport * from './error.js';\nexport { stringify, stringifyMap } from './stringify.js';\n\n/** \u89E3\u6790 wiki \u6587\u672C\uFF0C\u4EE5 `Map` \u7C7B\u578B\u8FD4\u56DE\u89E3\u6790\u7ED3\u679C\u3002 \u4F1A\u5408\u5E76\u91CD\u590D\u51FA\u73B0\u7684 key */\nexport function parseToMap(s: string): WikiMap {\n  const w = parse(s);\n\n  const data = new Map<string, WikiItem>();\n\n  for (const item of w.data) {\n    const previous = data.get(item.key);\n    if (!previous) {\n      data.set(item.key, item);\n      continue;\n    }\n\n    previous.push(item);\n  }\n\n  return { type: w.type, data };\n}\n\nfunction processInput(s: string): [string, number] {\n  let offset = 2;\n  s = s.replaceAll('\\r\\n', '\\n');\n\n  for (const char of s) {\n    switch (char) {\n      case '\\n': {\n        offset++;\n        break;\n      }\n      case ' ':\n      case '\\t': {\n        continue;\n      }\n      default: {\n        return [s.trim(), offset];\n      }\n    }\n  }\n\n  return [s.trim(), offset];\n}\n\nexport function parse(s: string): Wiki {\n  const wiki: Wiki = {\n    type: '',\n    data: [],\n  };\n\n  const [strTrim, offset] = processInput(s);\n\n  if (strTrim === '') {\n    return wiki;\n  }\n\n  if (!strTrim.startsWith(prefix)) {\n    throw new WikiSyntaxError(offset - 1, null, GlobalPrefixError);\n  }\n\n  if (!strTrim.endsWith(suffix)) {\n    throw new WikiSyntaxError((s.match(/\\n/g)?.length ?? -2) + 1, null, GlobalSuffixError);\n  }\n\n  const arr = strTrim.split('\\n');\n  if (arr[0]) {\n    wiki.type = parseType(arr[0]);\n  }\n\n  /* split content between {{Infobox xxx and }} */\n  const fields = arr.slice(1, -1);\n\n  let inArray = false;\n  for (let i = 0; i < fields.length; ++i) {\n    const line = fields[i]?.trim();\n    const lino = offset + i;\n\n    if (!line) {\n      continue;\n    }\n    /* new field */\n    if (line.startsWith('|')) {\n      if (inArray) {\n        throw new WikiSyntaxError(lino, line, ArrayNoCloseError);\n      }\n      const meta = parseNewField(lino, line);\n      inArray = meta[2] === 'array';\n      const field = new WikiItem(...meta);\n      wiki.data.push(field);\n      /* is Array item */\n    } else if (inArray) {\n      if (line.startsWith('}')) {\n        inArray = false;\n        continue;\n      }\n      if (i === fields.length - 1) {\n        throw new WikiSyntaxError(lino, line, ArrayNoCloseError);\n      }\n      wiki.data.at(-1)?.values?.push(new WikiArrayItem(...parseArrayItem(lino, line)));\n    } else {\n      throw new WikiSyntaxError(lino, line, ExpectingNewFieldError);\n    }\n  }\n  return wiki;\n}\n\nconst parseType = (line: string): string => {\n  if (!line.includes('}}')) {\n    return line.slice(prefix.length).trim();\n  }\n  return line.slice(prefix.length, line.indexOf('}}')).trim();\n};\n\nconst parseNewField = (lino: number, line: string): [string, string, WikiItemType] => {\n  const str = line.slice(1);\n  const index = str.indexOf('=');\n\n  if (index === -1) {\n    throw new WikiSyntaxError(lino, line, ExpectingSignEqualError);\n  }\n\n  const key = str.slice(0, index).trim();\n  const value = str.slice(index + 1).trim();\n  switch (value) {\n    case '{': {\n      return [key, '', 'array'];\n    }\n    default: {\n      return [key, value, 'object'];\n    }\n  }\n};\n\nconst parseArrayItem = (lino: number, line: string): [string, string] => {\n  if (!line.startsWith('[') || !line.endsWith(']')) {\n    throw new WikiSyntaxError(lino, line, ArrayItemWrappedError);\n  }\n  const content = line.slice(1, -1);\n  const index = content.indexOf('|');\n  if (index === -1) {\n    return ['', content.trim()];\n  }\n  return [content.slice(0, index).trim(), content.slice(index + 1).trim()];\n};\n"],
  "mappings": "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",
  "names": []
}
