// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package tutorial

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getEpisodePatch = `-- name: GetEpisodePatch :one
SELECT id, episode_id, state, from_user_id, wiki_user_id, reason, original_name, name, original_name_cn, name_cn, original_duration, duration, original_airdate, airdate, original_description, description, created_at, updated_at, deleted_at, reject_reason, comments_count, patch_desc, ep FROM episode_patch WHERE id = $1 LIMIT 1
`

func (q *Queries) GetEpisodePatch(ctx context.Context, id pgtype.UUID) (EpisodePatch, error) {
	row := q.db.QueryRow(ctx, getEpisodePatch, id)
	var i EpisodePatch
	err := row.Scan(
		&i.ID,
		&i.EpisodeID,
		&i.State,
		&i.FromUserID,
		&i.WikiUserID,
		&i.Reason,
		&i.OriginalName,
		&i.Name,
		&i.OriginalNameCn,
		&i.NameCn,
		&i.OriginalDuration,
		&i.Duration,
		&i.OriginalAirdate,
		&i.Airdate,
		&i.OriginalDescription,
		&i.Description,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
		&i.RejectReason,
		&i.CommentsCount,
		&i.PatchDesc,
		&i.Ep,
	)
	return i, err
}
