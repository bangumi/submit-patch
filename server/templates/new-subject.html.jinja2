{% extends "layout/base.html.jinja2" %}

{% block head %}
  <title>新建条目</title>
  <script type="importmap">
    {
      "imports":{
        "@bgm38/wiki": "/static/@bgm38/wiki/0.2.8/dist/index.js"
      }
    }
  </script>
  <script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async
          defer></script>
{% endblock %}

{% block content %}
  <div class="row m-1">
    <p>
      <a href="https://bgm.tv/group/wiki" target="_blank">
        <h1>提交前请先阅读置顶了解常见错误</h1>
      </a>
    </p>
  </div>

  <div class="col mb-4">
    <div class="btn-group" role="group">
      <a type="button"
         href="/new-subject/1"
         class="btn {% if subject_type == 1 %}btn-primary{% else %}btn-outline-primary{% endif %}">
        新书
      </a>
      <a type="button"
         href="/new-subject/2"
         class="btn {% if subject_type == 2 %}btn-primary{% else %}btn-outline-primary{% endif %}">
        新动画
      </a>
      <a type="button"
         href="/new-subject/3"
         class="btn {% if subject_type == 3 %}btn-primary{% else %}btn-outline-primary{% endif %}">
        新音乐
      </a>
      <a type="button"
         href="/new-subject/4"
         class="btn {% if subject_type == 4 %}btn-primary{% else %}btn-outline-primary{% endif %}">
        新游戏
      </a>
      <a type="button"
         href="/new-subject/6"
         class="btn {% if subject_type == 6 %}btn-primary{% else %}btn-outline-primary{% endif %}">
        新影视
      </a>
    </div>
  </div>

  <form method="post"
        action="/new-subject"
        id="wiki-form"
        enctype="application/x-www-form-urlencoded">

    {{ csrf_input | safe }}

    {% if pp %}
      {#      <div class="row">#}
      {% for key, value in pp.items() %}
        <div class="form-check form-check-inline">
          <input required
                 class="form-check-input platform-radio"
                 type="radio"
                 name="platform"
                 id="platform-{{ key }}"
                 value="{{ key }}"
          >
          <label class="form-check-label"
                 for="platform-{{ key }}">{{ value.type_cn }}</label>
        </div>
      {% endfor %}
      {#      </div>#}
    {% endif %}

    <div class="form-group">
      <label for="name">条目名称</label>
      <input class="form-control" id="name" name="name" value="{{ data }}">
    </div>

    <input type="hidden" name="type_id" value="{{ subject_type }}">

    <div class="form-group">
      <label for="infobox">Infobox</label>
      <textarea rows="30"
                class="form-control"
                id="infobox"
                name="infobox"></textarea>
    </div>

    <div class="form-group">
      <label for="summary">简介</label>
      <textarea rows="10" class="form-control" id="summary"
                name="summary"></textarea>
    </div>

    <div class="form-check">
      <label class="form-check-label" for="exampleCheck1">NSFW</label>
      <input type="checkbox" name="nsfw" class="form-check-input"
        {% if data %}
             checked
        {% endif %}
             id="exampleCheck1">
    </div>

    <hr>

    <div class="form-group">
      <label for="reason" class="mb-2">原因</label>
      <textarea rows="5"
                class="form-control mb-2"
                id="patch_desc"
                placeholder="详细说明"
                name="patch_desc">{{ data }}</textarea>
    </div>

    <div class="cf-turnstile m-1" data-theme="light"
         data-response-field-name="cf_turnstile_response"
         data-sitekey="{{ TURNSTILE_SITE_KEY }}"></div>

    <p>请等待验证码通过再进行提交</p>

    <button type="submit" class="btn btn-primary">Submit</button>
  </form>

  <script type="module">
    import {
      parseToMap, stringifyMap
    } from '/static/@bgm38/wiki/0.2.8/dist/index.js';

    import platforms
      from '/static/common/subject_platforms.370f9e.json' assert {type: 'json'};
    import templates
      from '/static/common/wiki_template.7ce1ba.json' assert {type: 'json'};

    const subjectType = {{ subject_type | tojson }};
    const configForSubjectType = platforms.platforms[subjectType];

    if (!configForSubjectType) {
      const tpl = templates[platforms.default[subjectType].wiki_tpl];
      $('#infobox').val(tpl);
    }

    function platformChange() {
      const currentPlatform = $('#wiki-form').find('input[name="platform"]:checked').val();

      const config = platforms.platforms[subjectType]?.[currentPlatform]
      const tpl = templates[config?.wiki_tpl ?? platforms.default[subjectType].wiki_tpl];

      const infobox = $('#infobox')

      const currentInfobox = infobox.val()

      const defaultWiki = parseToMap(tpl)
      const w = parseToMap(currentInfobox)
      const finalWiki = parseToMap(tpl)

      finalWiki.type = w.type || defaultWiki.type;

      w.data.forEach((v, k) => {
        if (v !== defaultWiki.data.get(k)) {
          finalWiki.data.set(k, v);
        }
      })

      infobox.val(stringifyMap(finalWiki));
    }

    $('.platform-radio').on('change', platformChange)
  </script>
{% endblock %}
